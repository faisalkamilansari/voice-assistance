version: '3.8'

services:
  agent-service:
    image: faisalkamil/bpt-agent:v1.0.3
    # image: sp-ag
    container_name: callbpt_agent
    cpus: 0.5 
    mem_limit: 1536m
    ports:
      - "8001:80"
    env_file:
      - .env 
    networks:
      - app-network  # Define the network to connect to
    # extra_hosts:
    #   - "vassistserver.buopso.com:192.168.100.199"

  front-service:
    image: faisalkamil/bpt-front:v1.0.1
    container_name: callbpt_frontend
    cpus: 0.25
    mem_limit: 256m
    ports:
      - "3000:3000"
    env_file:
      - .env 
    environment:
      - NODE_ENV=production
    networks:
      - app-network  # Connect to the same network as other services

  livekit-server:
    image: livekit/livekit-server:v1.8
    container_name: livekit-server
    cpus: 0.25
    mem_limit: 256m
    ports:
      - "7880:7880"
      - "7881:7881"
      - "5000:5000/udp"
    volumes:
      - ./livekit.yaml:/etc/livekit.yaml
    command: --config /etc/livekit.yaml 
    networks:
      - app-network  # Connect to the same network as other services

  redis:
    image: redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network  # Connect to the same network as other services

  sip:
    image: livekit/sip
    container_name: livekit-sip
    cpus: 0.25
    mem_limit: 256m
    ports:
      - "5060:5060"
      - "10000-20000:10000-20000"
    volumes:
      - ./sip_config.yaml:/etc/sip_config.yaml
    command: --config /etc/sip_config.yaml
    networks:
      - app-network
    
  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx_proxy
  #   cpus: 0.25
  #   mem_limit: 128m
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #     - ./ssl/vassistserver.crt:/etc/nginx/vassistserver.crt:ro
  #     - ./ssl/vassistserver.key:/etc/nginx/vassistserver.key:ro
  #     - ./ssl/vassist.crt:/etc/nginx/vassist.crt:ro
  #     - ./ssl/vassist.key:/etc/nginx/vassist.key:ro
  #   depends_on:
  #     - agent-service
  #   networks:
  #     - app-network
# Define a custom network

volumes:
  redis_data:
networks:
  app-network:
    driver: bridge  # Default driver, can be omitted as 'bridge' is default
